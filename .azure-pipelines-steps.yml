#
# Steps for building and testing Jest. See jobs defined in .azure-pipelines.yml
#

steps:
  - checkout: self
    path: jest

  - script: |
      git config core.autocrlf false
      git config core.symlinks true
      git reset HEAD --hard
    displayName: Preserve LF endings and symbolic links

  - bash: |
      echo "Path to cache: $CACHE_PATH"

      echo "Saving as __CACHE_PATH"
      echo "##vso[task.setvariable variable=__CACHE_PATH]$CACHE_PATH"

      echo "Setting CACHE_PATH to a new temporary path"

      echo "mktemp: $(mktemp --help)"

      export TMPDIR=$PIPELINE_WORKSPACE

      export CACHE_PATH=$(mktemp -d)
      echo "cache_path: $CACHE_PATH"

      export CACHE_PATH_FOLDER_NAME=$(basename $CACHE_PATH)

      echo "cache_path: $CACHE_PATH_FOLDER_NAME"

      if [ "$AGENT_OS" == "Windows_NT" ]; then
        export p="$(Pipeline.Workspace)"
        echo "p is $p"
        export CACHE_PATH="$(Pipeline.Workspace)\$(basename $CACHE_PATH)"
        echo "CACHE_PATH is now $CACHE_PATH"
      fi

      echo "##vso[task.setvariable variable=CACHE_PATH]$CACHE_PATH"
      echo "New path to cache: $CACHE_PATH"
    displayName: Pre-cache step

  - bash: printenv
  - script: |
      set > a.txt
      type a.txt
    condition: eq(variables['Agent.OS'], 'Windows_NT')

  - task: CacheBeta@0
    inputs:
      key: |
        jest
        node_modules_tar
        $(Agent.OS)
         $(Build.SourcesDirectory)/yarn.lock
      path: $(CACHE_PATH)
    displayName: Cache node_modules

  - task: CacheBeta@0
    inputs:
      key: |
        jest
        yarn
        $(Agent.OS)
        $(Build.SourcesDirectory)/yarn.lock
      path: $(YARN_CACHE_FOLDER)
    displayName: Cache Yarn

  # Ensure Node.js 10 is active
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Use Node.js 10'

  # Ensure Python 2.7 is active
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7'
    displayName: 'Use Python 2.7'

  # Run yarn to install dependencies and build
  - script: node scripts/remove-postinstall
    displayName: 'Remove postinstall script'

  - script: yarn --no-progress --frozen-lockfile
    displayName: 'Install dependencies'

  - script: node scripts/build
    displayName: 'Build'

# Run test-ci-partial
 # - script: yarn run test-ci-partial
 #   displayName: 'Run tests'

  # Publish CI test results
  # - task: PublishTestResults@2
  #   inputs:
  #     testResultsFiles: '**/reports/junit/*.xml'
  #     testRunTitle: 'CI Tests $(Agent.OS)'
  #   displayName: 'Publish test results'
  #   condition: succeededOrFailed()
