#
# Steps for building and testing Jest. See jobs defined in .azure-pipelines.yml
#

steps:
  - checkout: self
    path: jest

  - task: RestoreCache@0
    inputs:
      path: '$(Build.SourcesDirectory)/../cache'
      key: 'jest_tar_node10_$(Agent.OS)'

  - bash: |
      if test -f "../cache/cache.tar"; then
        tar -xvpf ../cache/cache.tar -C . --same-owner
        ls -la .
        du ./node_modules
      fi
    displayName: Extract cache tar

  # - task: RestoreCache@0
  #   inputs:
  #     path: '$(Build.SourcesDirectory)/website/node_modules'
  #     key: 'jest_website_node10_$(Agent.OS)'

  # Ensure Node.js 10 is active
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Use Node.js 10'

  # Ensure Python 2.7 is active
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7'
    displayName: 'Use Python 2.7'

  # Run yarn to install dependencies and build
  - script: node scripts/remove-postinstall
    displayName: 'Remove postinstall script'

  - script: yarn --no-progress --frozen-lockfile
    displayName: 'Install dependencies'

  - script: node scripts/build
    displayName: 'Build'

  # TODO: move these prior to the Build step?

  - bash: |
      mkdir -p ../cache
      tar -cvpf ../cache/cache.tar ./node_modules
    displayName: Create cache tar

  - task: SaveCache@0
    inputs:
      path: '$(Build.SourcesDirectory)/../cache'
      key: 'jest_tar_node10_$(Agent.OS)'

  # - task: SaveCache@0
  #   inputs:
  #     path: '$(Build.SourcesDirectory)/website/node_modules'
  #     key: 'jest_website_node10_$(Agent.OS)'    

  # Run test-ci-partial
 # - script: yarn run test-ci-partial
 #   displayName: 'Run tests'

  # Publish CI test results
  # - task: PublishTestResults@2
  #   inputs:
  #     testResultsFiles: '**/reports/junit/*.xml'
  #     testRunTitle: 'CI Tests $(Agent.OS)'
  #   displayName: 'Publish test results'
  #   condition: succeededOrFailed()
